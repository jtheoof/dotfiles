# vim: noet ts=4

[alias]
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'

	a   = add
	au  = add -u .
	ap  = add -p

	br  = branch
	bra = branch -a
	brv = branch -vv

	c   = commit
	cc  = commit -C
	cf  = commit --fixup
	cm  = commit -m
	ca  = commit --verbose --amend
	car  = commit --verbose --amend --reuse-message=HEAD
	cam = commit -am
	caa = commit -a --amend
	cv  = commit --verbose

	ch  = cherry-pick
	cha = cherry-pick --abort

	change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "

	co  = checkout
	cop = checkout -p

	cpf = !git show $1 --pretty=format: --name-only | xargs | xsel -ib

	count = !git log --pretty=format:'' | wc -l

	df  = diff
	dfs = diff --staged
	dft = difftool
	dtg = difftool -t gvimdiff
	dfc = diff --cached
	dfw = diff --color-words

	gr  = grep -n -I -i --heading --break -e

	fe  = fetch --prune
	fea  = fetch --all --tags --prune

	files = show --pretty='format:' --name-only

    fix-new-lines = "!f() { git ls-files -z | while IFS= read -rd '' f; do tail -c1 < "$f" | read -r _ || echo >> "$f"; done }; f"

	lc   = log --pretty=oneline --decorate=full --stat --no-merges ORIG_HEAD..
	lg   = log -p
	logp = log --pretty=oneline --decorate=full
	ll   = log --pretty=format:'%h %cn %s' --decorate=full

	ls  = status

	p   = pull

	rb  = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbs = rebase --skip
	rbi = rebase -i

	rv = revert

	mt  = mergetool -t vimdiff
	mtg = mergetool -t gvimdiff

	show-conflicts = diff --name-only --diff-filter=U

	st  = status -sb
	sta = status --ignored

	su  = submodule update
	sui = submodule update --init
	sur = submodule update --recursive

	undo    = reset HEAD^
	unstash = stash apply

	who = shortlog -s --

	x = push

	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	add-unmerged  = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"

	jshint = "!git status -uno -s | cut -f3 -d' ' | ack-grep '.js$' | xargs jshint"
	jsfix  = "!f() { git ls-files | xargs jshint | cut -d':' -f1 | sort -u | xargs ; }; vim `f`"
[color]
	status = auto
	diff = auto
	branch = auto
	interactive = auto
	grep = auto
	whitespace = magenta reverse
[color "branch"]
	current = magenta
	local = cyan
	remote = cyan
[color "decorate"]
	branch = green
	remoteBranch = green
	tag = magenta
	HEAD = magenta
[color "diff"]
	meta = blue
	frag = yellow
	old = red
	new = green
	whitespace = magenta reverse
[color "grep"]
	match = black cyan bold
	filename = blue
[color "status"]
	header = yellow
	added = green
	changed = red
	untracked = red bold
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[github]
	user = jtheoof
[mergetool "sublime"]
	cmd = sublime -w $MERGED
	trustExitCode = false
[merge]
	tool = vimdiff
[push]
	default = current
[user]
	name = Jeremy Attali
	email = contact@jtheoof.me
[grep]
	extendedRegexp = true
[gc]
	auto = 0
[core]
	editor = nvim
[rebase]
	autoSquash = true
	autoStash = true
	updateRefs = true
[pull]
	rebase = true

[includeIf "gitdir:~/dev/ubisoft/"]
  path = .gitconfig-ubisoft
[includeIf "gitdir:~/dev/gitlab-ncsa.ubisoft.org/"]
  path = .gitconfig-ubisoft
[advice]
	skippedCherryPicks = false
